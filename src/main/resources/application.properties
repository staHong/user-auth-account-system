spring.application.name=auth
spring.datasource.url=jdbc:postgresql://localhost:5432/auth_local
spring.datasource.username=myuser
spring.datasource.password=mypassword
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=900000
spring.datasource.hikari.max-lifetime=3600000

# \uC774\uBA54\uC77C \uC778\uC99D (\uC62C\uBC14\uB978 \uC124\uC815)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=authemail@gmail.com
spring.mail.password=crrg reyq itfy mtif

# SMTP \uC124\uC815
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Redis \uC124\uC815
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=60s

# \uD30C\uC77C \uC800\uC7A5 \uACBD\uB85C \uC124\uC815 (\uC6B4\uC601\uCCB4\uC81C\uBCC4\uB85C \uBCC0\uACBD \uAC00\uB2A5)
file.upload.base-directory=/Users/auth/upload_files/trend

# \uC0AC\uC5C5\uC790\uB4F1\uB85D\uC99D \uD30C\uC77C \uC800\uC7A5 \uACBD\uB85C \uC124\uC815 (\uC6B4\uC601\uCCB4\uC81C\uBCC4\uB85C \uBCC0\uACBD \uAC00\uB2A5)
file.upload.biz-directory=/Users/auth/upload_files/biz_lic_file

# \uD30C\uC77C \uC800\uC7A5 \uC124\uC815
# \uD30C\uC77C \uC5C5\uB85C\uB4DC \uD65C\uC131\uD654
spring.servlet.multipart.enabled=true
# \uD55C\uAC1C \uD30C\uC77C\uC5D0 \uB300\uD55C \uCD5C\uB300 \uD06C\uAE30
spring.servlet.multipart.max-file-size=10MB
# \uC804\uCCB4 \uC694\uCCAD \uD06C\uAE30
spring.servlet.multipart.max-request-size=100MB

# \uC774\uBA54\uC77C \uC778\uC99D \uAD00\uB828 \uBA54\uC2DC\uC9C0
# \uC774\uBA54\uC77C \uC81C\uBAA9 - \uD68C\uC6D0\uAC00\uC785/\uBE44\uBC00\uBC88\uD638 \uBCC0\uACBD
email.verification.subject=[AUTH] \uC774\uBA54\uC77C \uC778\uC99D \uCF54\uB4DC
# \uC774\uBA54\uC77C \uB0B4\uC6A9 - \uD68C\uC6D0\uAC00\uC785/\uBE44\uBC00\uBC88\uD638 \uBCC0\uACBD
email.verification.content=<p>\uC548\uB155\uD558\uC138\uC694,</p><p>\uC544\uB798\uC758 \uC778\uC99D\uBC88\uD638\uB97C \uC785\uB825\uD558\uC5EC \uC774\uBA54\uC77C \uC778\uC99D\uC744 \uC644\uB8CC\uD558\uC138\uC694:</p><h3>{code}</h3><p>\uC774 \uCF54\uB4DC\uB294 5\uBD84 \uD6C4 \uB9CC\uB8CC\uB429\uB2C8\uB2E4.</p>
# \uC778\uC99D\uBC88\uD638\uC758 \uC720\uD6A8 \uC2DC\uAC04 (\uB2E8\uC704: 5\uBD84)
email.verification.expiration-time=5
# \uC0DD\uC131\uD560 \uC778\uC99D\uBC88\uD638\uC758 \uCD5C\uC18C\uAC12 / \uC608) 100000\uC774\uBA74 \uC778\uC99D\uBC88\uD638\uAC00 \uCD5C\uC18C 100000\uBD80\uD130 \uC2DC\uC791 (6\uC790\uB9AC \uBCF4\uC7A5)
email.verification.range-min=100000
# \uC0DD\uC131\uD560 \uC778\uC99D\uBC88\uD638\uC758 \uCD5C\uB300\uAC12 / \uC608) 999999\uC774\uBA74 \uC778\uC99D\uBC88\uD638\uAC00 \uCD5C\uB300 999999\uAE4C\uC9C0 \uAC00\uB2A5 (6\uC790\uB9AC \uBCF4\uC7A5)
email.verification.range-max=999999

# \uC774\uBA54\uC77C \uC81C\uBAA9 - \uC544\uC774\uB514 \uCC3E\uAE30
email.find-id.subject=[AUTH] \uC544\uC774\uB514 \uCC3E\uAE30 \uACB0\uACFC \uC548\uB0B4

# \uC778\uC99D\uC774 \uD544\uC694\uD55C \uD5C8\uC6A9\uD560 API \uACBD\uB85C \uBAA9\uB85D Spring Security
security.auth-required=/auth/**

# JWT \uAD00\uB828 \uC124\uC815
# 6\uC2DC\uAC04 (6 \u00D7 60 \u00D7 60 \u00D7 1000)
jwt.expiration-time=21600000
jwt.secret-key=e2e5c86a739e93cd35f8ab3ba09835604d66d5c4cbae940510abd11f8450ff772c85f7a02f03015accda8e5d0151198a781c7c2a228708bed4114f25f6ecd0ee
